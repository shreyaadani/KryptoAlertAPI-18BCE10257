--TABLE USERDATA

-- Table: public.userdata

-- DROP TABLE public.userdata;

CREATE TABLE public.userdata
(
    uid integer NOT NULL,
    username character varying(20) COLLATE pg_catalog."default" NOT NULL,
    password character varying(20) COLLATE pg_catalog."default" NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT userdata_pkey PRIMARY KEY (uid)
)

TABLESPACE pg_default;

ALTER TABLE public.userdata
    OWNER to postgres;
COMMENT ON TABLE public.userdata
    IS 'user data (Kypto)';




--TABLE ALERT
-- Table: public.alert

-- DROP TABLE public.alert;

CREATE TABLE public.alert
(
    uid integer NOT NULL,
    aid integer NOT NULL,
    price bigint NOT NULL,
    status boolean,
    alerttime time without time zone,
    coinid character varying(20) COLLATE pg_catalog."default",
    CONSTRAINT alert_pkey PRIMARY KEY (aid)
)

TABLESPACE pg_default;

ALTER TABLE public.alert
    OWNER to postgres;


--TABLE ALERTQ
-- Table: public.alertq

-- DROP TABLE public.alertq;

CREATE TABLE public.alertq
(
    uid integer,
    aid integer,
    price bigint,
    email character varying COLLATE pg_catalog."default"
)

TABLESPACE pg_default;

ALTER TABLE public.alertq
    OWNER to postgres;


--DATA PREPARATON:
--(required dummy data for alert table)
INSERT INTO public.alert(
	uid, aid, price, status, alerttime, coinid)
	VALUES (0, 100, 0, false, now(), 'BTC');